=begin
#OpenAI API

#The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

OpenAPI spec version: 2.3.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.66
=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for OpenAIClient::RealtimeResponseCreateParams
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'RealtimeResponseCreateParams' do
  before do
    # run before each test
    @instance = OpenAIClient::RealtimeResponseCreateParams.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of RealtimeResponseCreateParams' do
    it 'should create an instance of RealtimeResponseCreateParams' do
      expect(@instance).to be_instance_of(OpenAIClient::RealtimeResponseCreateParams)
    end
  end
  describe 'test attribute "modalities"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["text", "audio"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.modalities = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "instructions"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "voice"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["alloy", "ash", "ballad", "coral", "echo", "sage", "shimmer", "verse"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.voice = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "output_audio_format"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["pcm16", "g711_ulaw", "g711_alaw"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.output_audio_format = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "tools"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "tool_choice"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "temperature"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "max_response_output_tokens"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "conversation"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "metadata"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "input"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
