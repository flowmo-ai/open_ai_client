=begin
#OpenAI API

#The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.

OpenAPI spec version: 2.3.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.66
=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for OpenAIClient::CreateModerationResponseCategoryAppliedInputTypes
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CreateModerationResponseCategoryAppliedInputTypes' do
  before do
    # run before each test
    @instance = OpenAIClient::CreateModerationResponseCategoryAppliedInputTypes.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CreateModerationResponseCategoryAppliedInputTypes' do
    it 'should create an instance of CreateModerationResponseCategoryAppliedInputTypes' do
      expect(@instance).to be_instance_of(OpenAIClient::CreateModerationResponseCategoryAppliedInputTypes)
    end
  end
  describe 'test attribute "hate"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["text"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.hate = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "hatethreatening"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["text"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.hatethreatening = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "harassment"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["text"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.harassment = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "harassmentthreatening"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["text"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.harassmentthreatening = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "illicit"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["text"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.illicit = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "illicitviolent"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["text"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.illicitviolent = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "self_harm"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["text", "image"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.self_harm = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "self_harmintent"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["text", "image"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.self_harmintent = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "self_harminstructions"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["text", "image"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.self_harminstructions = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "sexual"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["text", "image"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.sexual = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "sexualminors"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["text"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.sexualminors = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "violence"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["text", "image"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.violence = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "violencegraphic"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Array<String>', ["text", "image"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.violencegraphic = value }.not_to raise_error
      # end
    end
  end

end
